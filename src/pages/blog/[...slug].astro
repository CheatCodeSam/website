---
import '../../assets/katex.css';
import { getCollection } from 'astro:content';
import Tag from '../../components/Tag.astro';
import TimeLabel from '../../components/TimeLabel.svelte';
import BasePageLayout from '../../layouts/BasePageLayout.astro';
import { getDescriptionFromText, localOrRemoteSrcToUrl } from '../../utils';

const { slug } = Astro.params;
const posts = await getCollection('blog');
const post = posts.find((post) => post.data.id === +slug!.split('/')[1]);

if (!post) {
  return Astro.redirect('/404');
}

if (post.slug !== slug) {
  return Astro.redirect(`/blog/${post.slug}`);
}

const { Content } = await post.render();
const { title, description, tags, thumbnail, createdAt } = post.data;
const currUrl = new URL(Astro.request.url);
const imgSrc = thumbnail?.src ? localOrRemoteSrcToUrl(currUrl, thumbnail?.src).toString() : undefined;
---

<BasePageLayout
  title={title}
  metaDescription={description ?? getDescriptionFromText(post.body, 160)}
  metaKeywords={tags}
  metaImageSrc={imgSrc}
>
  <article class="blog-post">
    <header>
      <h1 class="title">{title}</h1>

      {description && <p class="description">{description}</p>}

      {
        tags && (
          <ul class="tags">
            {tags.map((tag) => (
              <li class="tags-item">
                <Tag name={tag} type="blog" />
              </li>
            ))}
          </ul>
        )
      }

      {
        thumbnail && (
          <img
            class="thumbnail"
            src={thumbnail.src}
            alt={thumbnail.alt}
            style={`aspect-ratio: ${thumbnail.aspectRatio?.replace(':', ' / ')}`}
          />
        )
      }

      <TimeLabel
        date={createdAt}
        prefix="Published "
        yearFormat={'numeric'}
        monthFormat={'long'}
        dayFormat={'numeric'}
      />
    </header>

    <main class="post-content">
      <Content />
    </main>
  </article>
</BasePageLayout>

<style lang="scss" is:global>
  article.blog-post {
    max-width: 64rem;
    width: 100%;
    padding: 0 1rem;
    box-sizing: border-box;
    margin: auto;

    h1.title {
      font-size: 2em;
    }

    ul.tags {
      display: flex;
      padding: 0;
      margin: 1rem 0;
      gap: 2ch;
      flex-wrap: wrap;

      li.tags-item {
        list-style: none;
        padding: 0;
        margin: 0;
      }
    }

    p.description {
      font-size: 1.1em;
      color: #666677;
    }

    .thumbnail {
      width: 100%;
      border-radius: 1.2rem;
    }

    main {
      padding-bottom: 1rem;

      p,
      ul {
        line-height: 1.5em;
      }
    }
  }
</style>
