---
import { CollectionEntry, getCollection } from 'astro:content';
import PageCard from '../../components/PageCard.astro';
import Tag from '../../components/Tag.astro';
import BasePageLayout from '../../layouts/BasePageLayout.astro';

const year = +(Astro.url.searchParams.get('year') ?? 'NaN');
const month = +(Astro.url.searchParams.get('month') ?? 'NaN');
const day = +(Astro.url.searchParams.get('day') ?? 'NaN');
const tags = Astro.url.searchParams.getAll('tag');

const posts = (
  await getCollection<'blog'>(
    'blog',
    ({ data }) =>
      (!year || +year === data.createdAt.getFullYear()) &&
      (!month || +month === data.createdAt.getMonth()) &&
      (!day || +day === data.createdAt.getDate()) &&
      (tags.length === 0 || tags.every((tag) => data.tags?.includes(tag)))
  )
).sort((a, b) => b.data.id - a.data.id);
const postsByYear = new Map<number, CollectionEntry<'blog'>[]>();

for (const post of posts) {
  const year = post.data.createdAt?.getFullYear();

  if (!postsByYear.has(year)) {
    postsByYear.set(year, []);
  }
  postsByYear.get(year)?.push(post);
}
---

<BasePageLayout
  title="Blog - Joona Aalto"
  metaDescription="This is my blog where I write about my projects and cover a variety of subjects, such as science, programming, and game development."
  metaKeywords={['Programming', 'Web development', 'Technology', 'Science', 'Games', 'Game development']}
>
  <header>
    <h1>Blog</h1>
    <p>
      This is my personal blog where I show my journey as a developer while exploring various science and technology
      topics that interest me.
    </p>
    <p>
      Occasionally I may also make some <Tag name="Devlog" type="blog" />s and <Tag name="Tutorial" type="blog" />s when
      I find a good topic.
    </p>
  </header>

  <div class="posts">
    {
      [...postsByYear.entries()].map(([year, posts]) => (
        <div class="post-group">
          <h2>{year}</h2>
          <ul>
            {posts.map((post) => (
              <PageCard page={post} />
            ))}
          </ul>
        </div>
      ))
    }
  </div>
</BasePageLayout>

<style lang="scss">
  header,
  .posts {
    max-width: 50rem;
    width: 100%;
    padding: 0 1.5rem;
    box-sizing: border-box;
    margin: auto;
  }

  h1 {
    font-size: 2.5em;
    width: fit-content;
    background: -webkit-linear-gradient(45deg, var(--accent-1), var(--accent-2));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  h2 {
    color: var(--accent-1);
  }

  header p {
    font-size: 1.1em;
    color: var(--text-color-2);
  }

  .posts {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    padding-bottom: 1.5rem;
  }

  .post-group ul {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    width: 100%;
    padding: 0;
    margin: 0;
  }
</style>
