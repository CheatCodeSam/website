---
import Nav from '../components/Nav.astro';

export interface Props {
  title: string;
  metaDescription?: string;
  metaKeywords?: string[];
  metaImageSrc?: string;
}

const { title, metaDescription, metaKeywords, metaImageSrc } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <title>{title}</title>
    <meta name="description" content={metaDescription} />
    {metaKeywords && <meta name="keywords" content={metaKeywords?.join(', ')} />}
    <meta name="og:title" property="og:title" content={title} />
    <meta name="og:description" property="og:description" content={metaDescription} />
    {metaImageSrc && <meta name="og:image" property="og:image" content={metaImageSrc} />}

    <!-- Init theme  -->
    <script is:inline>
      const initialTheme = JSON.parse(localStorage.getItem('theme') ?? 'auto');
      updateTheme(JSON.parse(localStorage.getItem('theme') ?? 'auto'));

      function updateTheme(theme) {
        if (theme === 'dark') {
          document.documentElement.classList.remove('light');
          document.documentElement.classList.add('dark');
        } else if (theme === 'light') {
          document.documentElement.classList.remove('dark');
          document.documentElement.classList.add('light');
        } else if (theme === 'auto') {
          if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
            document.documentElement.classList.remove('light');
            document.documentElement.classList.add('dark');
          } else {
            document.documentElement.classList.remove('dark');
            document.documentElement.classList.add('light');
          }
        }
      }
    </script>
    <!-- Update theme when prefers-color-scheme changes -->
    <script>
      const theme = JSON.parse(localStorage.getItem('theme') ?? '"auto"');
      // @ts-ignore
      updateTheme(theme);

      // Change theme when the theme store's value changes.
      const { theme: themeStore } = await import('../stores');
      themeStore.set(theme);

      // Update theme when user's preferred color scheme changes (stored theme still overrides this).
      const prefersLight = window.matchMedia('(prefers-color-scheme: light)');
      prefersLight.addEventListener('change', (e) => {
        if (e.matches && JSON.parse(localStorage.getItem('theme') ?? '"auto"') === 'auto') {
          // @ts-ignore
          themeStore.set(updateTheme('auto'));
        }
      });
      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)');
      prefersDark.addEventListener('change', (e) => {
        if (e.matches && JSON.parse(localStorage.getItem('theme') ?? '"auto"') === 'auto') {
          // @ts-ignore
          themeStore.set(updateTheme('auto'));
        }
      });

      // @ts-ignore
      themeStore.subscribe((theme) => theme && updateTheme(theme));
    </script>
    <link rel="stylesheet" href="/themes/dark.scss" media="(prefers-color-scheme: dark)" />
    <link rel="stylesheet" href="/themes/light.scss" media="(prefers-color-scheme: light)" />
  </head>

  <body class="dark">
    <Nav />

    <slot />

    <style lang="scss" is:global>
      @use '../../public/themes/light.scss';
      @use '../../public/themes/dark.scss';

      /* For browsers that support variable fonts */
      @supports (font-variation-settings: normal) {
        @font-face {
          font-family: 'Fira Code';
          src: url('/fonts/Fira_Code/FiraCode-VariableFont_wght.ttf') format('truetype-variations');
          font-weight: 300 700;
          font-style: normal;
          font-stretch: normal;
          font-display: swap;
        }

        @font-face {
          font-family: 'Inter';
          src: url('/fonts/Inter/Inter-VariableFont_slnt,wght.ttf') format('truetype-variations');
          font-weight: 100 900;
          font-style: oblique -10deg 0deg;
          font-display: swap;
        }
      }

      /* For browsers that don't support variable fonts */
      @supports not (font-variation-settings: normal) {
        @font-face {
          font-family: 'Inter';
          src: url('/fonts/Inter/static/Inter-ExtraLight.ttf') format('truetype');
          font-weight: 200;
          font-display: swap;
        }

        @font-face {
          font-family: 'Inter';
          src: url('/fonts/Inter/static/Inter-Regular.ttf') format('truetype');
          font-weight: 400;
          font-display: swap;
        }

        @font-face {
          font-family: 'Inter';
          src: url('/fonts/Inter/static/Inter-Bold.ttf') format('truetype');
          font-weight: 700;
          font-display: swap;
        }

        @font-face {
          font-family: 'Fira Code';
          src: url('/fonts/Fira_Code/static/FiraCode-Light.ttf') format('truetype');
          font-weight: 300;
          font-display: swap;
        }

        @font-face {
          font-family: 'Fira Code';
          src: url('/fonts/Fira_Code/static/FiraCode-Regular.ttf') format('truetype');
          font-weight: 400;
          font-display: swap;
        }

        @font-face {
          font-family: 'Fira Code';
          src: url('/fonts/Fira_Code/static/FiraCode-Bold.ttf') format('truetype');
          font-weight: 700;
          font-display: swap;
        }
      }

      :root {
        color-scheme: light dark;
        color: var(--text-color-1);

        &.light {
          @include light.theme-variables;
        }

        &.dark {
          @include dark.theme-variables;
        }
      }

      body {
        min-height: 100vh;
        margin: 0;
        padding-top: 4rem;
        box-sizing: border-box;
        font-size: 1.1em;
        font-family: 'Inter', system-ui, -apple-system, sans-serif;
        font-weight: 400;
        background-color: var(--bg-1);
      }

      p {
        line-height: 1.5;
      }

      a {
        color: var(--link-color);
      }

      code {
        font-family: 'Fira Code', monospace;
        line-height: 1.5em;
      }

      :not(pre) > code {
        font-size: 0.8em;
        font-weight: bold;
        background: rgba(255, 200, 200, 12%);
        color: #bb4444;
        border-radius: 4px;
        padding: 0.3em 0.45em;
      }

      pre.astro-code {
        font-size: 0.8em;
        padding: 1rem;
        box-sizing: border-box;
        border-radius: 0.6rem;
      }
    </style>
  </body>
</html>
