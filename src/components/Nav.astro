---
import { CollectionEntry, getCollection } from "astro:content";
import SearchBar from "./SearchBar.svelte";
import ThemeToggle from "./ThemeToggle.svelte";
import { slugToRoute } from "../utils";
import type { SearchEntry } from "../types";

type Entry = CollectionEntry<"blog"> | CollectionEntry<"projects">;

const posts = await getCollection<"blog">("blog");
const projects = await getCollection<"projects">("projects");
const pages = [...posts, ...projects].sort(pageSortFn);
const searchEntries: SearchEntry[] = [
  ...pages.map((page) => ({
    type: page.collection === "blog" ? "Blog" : "Project",
    collection: page.collection,
    title: page.data.title,
    tags: page.data.tags,
    href: getEntryHref(page),
  })),
  { type: "Page", title: "Home", href: "/" },
  { type: "Page", title: "Blog", href: "/blog" },
  { type: "Page", title: "Projects", href: "/projects" },
];

function pageSortFn(a: Entry, b: Entry) {
  if (a.collection === "blog" && b.collection === "blog") {
    return b.data.id - a.data.id;
  } else {
    return +b.data.createdAt - +a.data.createdAt;
  }
}

function getEntryHref(item: Entry) {
  return (
    item.data.url ||
    slugToRoute(item.slug, item.collection) ||
    window.location.href
  );
}
---

<nav>
  <ul>
    <li>
      <a href="/">
        <img class="logo" src="/icons/icon.svg" alt="My logo" />
      </a>
    </li>
    <li>
      <a href="/">Home</a>
    </li>
    <li>
      <a href="/projects">Projects</a>
    </li>
    <li>
      <a href="/blog">Blog</a>
    </li>
  </ul>

  <div class="search-bar-container">
    <SearchBar client:load entries={searchEntries} />
  </div>

  <div class="theme-toggle-container">
    <ThemeToggle client:load />
  </div>
</nav>

<style lang="scss">
  nav {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    height: 4rem;
    padding: 0 1.5rem;
    box-sizing: border-box;
    margin: auto;
    background-color: rgba(var(--bg-1-rgb), 0.6);
    backdrop-filter: blur(0.2rem);
    z-index: 10;
  }

  ul {
    flex: 1;
    display: flex;
    justify-content: start;
    align-items: center;
    height: 100%;
    gap: 1rem;
    list-style: none;
    margin: 0;
    padding: 0;

    li a {
      display: flex;
      align-items: center;
      text-decoration: none;
      color: var(--text-color-1);

      &:hover {
        color: var(--link-color);
      }

      img.logo {
        width: 2rem;
        height: 2rem;
      }
    }
  }

  .theme-toggle-container {
    flex: 1;
    display: flex;
    justify-content: flex-end;
  }

  .search-bar-container {
    width: 50rem;
    padding: 0 1rem;
    box-sizing: border-box;
    display: flex;
    justify-content: flex-end;
  }

  :global(.light) {
    img.logo {
      filter: brightness(0.9);
    }
  }
</style>
