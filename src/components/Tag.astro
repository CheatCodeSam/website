---
interface Props {
  className?: string;
  name: string;
  type: 'blog' | 'projects';
}

const { className = '', name, type } = Astro.props;
const searchParams = Astro.url.searchParams;
const searchParamsTags = Astro.url.pathname === `/${type}` ? searchParams.getAll('tag') : [];
const href = searchParamsTags.includes(name) ? urlWithRemovedTag() : urlWithAddedTag();
const classList = ['tag', ...className.split(' ')];

function urlWithAddedTag(): string {
  const formattedParams = searchParams.toString().replaceAll('%2F', '/');
  const paramsWithAddedTag = formattedParams.length > 0 ? formattedParams + '&tag=' + name : 'tag=' + name;
  return `/${type}?${paramsWithAddedTag.replaceAll('&&', '&')}`;
}

function urlWithRemovedTag(): string {
  const formattedParams = searchParams.toString().replaceAll('%2F', '/');
  const paramsWithRemovedTag = formattedParams.replace('&tag=' + name, '').replace('tag=' + name, '');
  return `/${type}${
    paramsWithRemovedTag.toString().length > 0 ? '?' + paramsWithRemovedTag.replaceAll('&&', '&') : ''
  }`.replaceAll('?&', '?');
}
---

<a class={classList.join(' ')} href={href}>#{name}</a>

<style lang="scss">
  .tag {
    display: inline;
    padding: 0.3em 0.45em;
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-1-rgb), 10%);
    color: var(--accent-1);
    border-radius: 0.4rem;
    text-decoration: none;
    font-family: 'Fira Code', monospace;
  }
</style>
